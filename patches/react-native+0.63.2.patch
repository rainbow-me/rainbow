diff --git a/node_modules/react-native/Libraries/Animated/src/NativeAnimatedModule.js b/node_modules/react-native/Libraries/Animated/src/NativeAnimatedModule.js
index fc76ec1..8895b0f 100644
--- a/node_modules/react-native/Libraries/Animated/src/NativeAnimatedModule.js
+++ b/node_modules/react-native/Libraries/Animated/src/NativeAnimatedModule.js
@@ -63,4 +63,4 @@ export interface Spec extends TurboModule {
   +removeListeners: (count: number) => void;
 }
 
-export default (TurboModuleRegistry.get<Spec>('NativeAnimatedModule'): ?Spec);
+export default (TurboModuleRegistry.get<Spec>('NativeAnimatedModule', true): ?Spec);
diff --git a/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js b/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js
index b3b1135..fd9831a 100644
--- a/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js
+++ b/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js
@@ -16,9 +16,9 @@ import invariant from 'invariant';
 
 const turboModuleProxy = global.__turboModuleProxy;
 
-export function get<T: TurboModule>(name: string): ?T {
+export function get<T: TurboModule>(name: string, legacy: boolean = false): ?T {
   // Bridgeless mode requires TurboModules
-  if (!global.RN$Bridgeless) {
+  if (!global.RN$Bridgeless || legacy) {
     // Backward compatibility layer during migration.
     const legacyModule = NativeModules[name];
     if (legacyModule != null) {
diff --git a/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm b/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm
index d8938d7..b2ea76b 100644
--- a/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm
+++ b/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm
@@ -621,10 +621,10 @@ - (void)updateModuleWithInstance:(id<RCTBridgeModule>)instance
   NSArray *moduleClassesCopy = [moduleClasses copy];
   NSMutableArray<RCTModuleData *> *moduleDataByID = [NSMutableArray arrayWithCapacity:moduleClassesCopy.count];
   for (Class moduleClass in moduleClassesCopy) {
-    if (RCTTurboModuleEnabled() && [moduleClass conformsToProtocol:@protocol(RCTTurboModule)]) {
+    NSString *moduleName = RCTBridgeModuleNameForClass(moduleClass);
+    if (RCTTurboModuleEnabled() && ![moduleName isEqualToString:@"NativeAnimatedModule"] && [moduleClass conformsToProtocol:@protocol(RCTTurboModule)]) {
       continue;
     }
-    NSString *moduleName = RCTBridgeModuleNameForClass(moduleClass);
 
     // Check for module name collisions
     RCTModuleData *moduleData = _moduleDataByName[moduleName];
diff --git a/node_modules/react-native/React/Views/RCTView.m b/node_modules/react-native/React/Views/RCTView.m
index a5117be..59108bb 100644
--- a/node_modules/react-native/React/Views/RCTView.m
+++ b/node_modules/react-native/React/Views/RCTView.m
@@ -805,6 +805,11 @@ - (void)displayLayer:(CALayer *)layer
     layer.contents = nil;
     layer.needsDisplayOnBoundsChange = NO;
     layer.mask = nil;
+    if (@available(iOS 13.0, *)) {
+      if (layer.cornerRadius < MIN(self.bounds.size.height, self.bounds.size.width) / 2) {
+        layer.cornerCurve = kCACornerCurveContinuous;
+      }
+    }
     return;
   }
 
