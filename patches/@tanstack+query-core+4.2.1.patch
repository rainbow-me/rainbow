diff --git a/node_modules/@tanstack/query-core/build/types/packages/query-core/src/types.d.ts b/node_modules/@tanstack/query-core/build/types/packages/query-core/src/types.d.ts
index 4f387a8..e7d324e 100644
--- a/node_modules/@tanstack/query-core/build/types/packages/query-core/src/types.d.ts
+++ b/node_modules/@tanstack/query-core/build/types/packages/query-core/src/types.d.ts
@@ -221,6 +221,7 @@ export interface QueryObserverBaseResult<TData = unknown, TError = unknown> {
     isFetched: boolean;
     isFetchedAfterMount: boolean;
     isFetching: boolean;
+    isIdle: boolean;
     isLoading: boolean;
     isLoadingError: boolean;
     isPaused: boolean;
@@ -239,7 +240,8 @@ export interface QueryObserverLoadingResult<TData = unknown, TError = unknown> e
     data: undefined;
     error: null;
     isError: false;
-    isLoading: true;
+    isIdle: boolean;
+    isLoading: boolean;
     isLoadingError: false;
     isRefetchError: false;
     isSuccess: false;
@@ -249,6 +251,7 @@ export interface QueryObserverLoadingErrorResult<TData = unknown, TError = unkno
     data: undefined;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: true;
     isRefetchError: false;
@@ -259,6 +262,7 @@ export interface QueryObserverRefetchErrorResult<TData = unknown, TError = unkno
     data: TData;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: true;
@@ -269,6 +273,7 @@ export interface QueryObserverSuccessResult<TData = unknown, TError = unknown> e
     data: TData;
     error: null;
     isError: false;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: false;
@@ -289,6 +294,7 @@ export interface InfiniteQueryObserverLoadingResult<TData = unknown, TError = un
     data: undefined;
     error: null;
     isError: false;
+    isIdle: false;
     isLoading: true;
     isLoadingError: false;
     isRefetchError: false;
@@ -299,6 +305,7 @@ export interface InfiniteQueryObserverLoadingErrorResult<TData = unknown, TError
     data: undefined;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: true;
     isRefetchError: false;
@@ -309,6 +316,7 @@ export interface InfiniteQueryObserverRefetchErrorResult<TData = unknown, TError
     data: InfiniteData<TData>;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: true;
@@ -319,6 +327,7 @@ export interface InfiniteQueryObserverSuccessResult<TData = unknown, TError = un
     data: InfiniteData<TData>;
     error: null;
     isError: false;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: false;
