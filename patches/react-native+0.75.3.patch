diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
new file mode 100644
index 0000000..893b35e
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
@@ -0,0 +1,127 @@
+
+/*
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderH
+ */
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wreturn-type-c-linkage"
+
+#import <React/RCTComponentViewProtocol.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name);
+#if RCT_NEW_ARCH_ENABLED
+#ifndef RCT_DYNAMIC_FRAMEWORKS
+
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> BlurViewCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> VibrancyViewCls(void) __attribute__((used)); // 3
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV
+Class<RCTComponentViewProtocol> MenuViewCls(void) __attribute__((used)); // 4
+#endif
+
+
+#if !TARGET_OS_OSX && !TARGET_OS_VISION
+Class<RCTComponentViewProtocol> AutoLayoutViewCls(void) __attribute__((used)); // 6
+Class<RCTComponentViewProtocol> CellContainerCls(void) __attribute__((used)); // 6
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+Class<RCTComponentViewProtocol> SkiaDomViewCls(void) __attribute__((used)); // 7
+Class<RCTComponentViewProtocol> SkiaPictureViewCls(void) __attribute__((used)); // 7
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_VISION
+
+#endif
+
+Class<RCTComponentViewProtocol> RNGestureHandlerButtonCls(void) __attribute__((used)); // 10
+Class<RCTComponentViewProtocol> RNGestureHandlerRootViewCls(void) __attribute__((used)); // 10
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_VISION
+
+#endif
+
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> RNCSafeAreaProviderCls(void) __attribute__((used)); // 15
+Class<RCTComponentViewProtocol> RNCSafeAreaViewCls(void) __attribute__((used)); // 15
+#endif
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> RNSFullWindowOverlayCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSModalScreenCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSScreenContainerCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSScreenCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSScreenNavigationContainerCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSScreenStackHeaderConfigCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSScreenStackHeaderSubviewCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSScreenStackCls(void) __attribute__((used)); // 16
+Class<RCTComponentViewProtocol> RNSSearchBarCls(void) __attribute__((used)); // 16
+#endif
+
+Class<RCTComponentViewProtocol> RNSVGCircleCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGClipPathCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGDefsCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGEllipseCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGForeignObjectCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGGroupCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGImageCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGSvgViewCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGLinearGradientCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGLineCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGMarkerCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGMaskCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGPathCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGPatternCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGRadialGradientCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGRectCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGSymbolCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGTextCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGTextPathCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGTSpanCls(void) __attribute__((used)); // 17
+Class<RCTComponentViewProtocol> RNSVGUseCls(void) __attribute__((used)); // 17
+#if !TARGET_OS_TV && !TARGET_OS_VISION
+Class<RCTComponentViewProtocol> RNCWebViewCls(void) __attribute__((used)); // 18
+#endif
+
+
+#endif
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#pragma GCC diagnostic pop
+
diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
new file mode 100644
index 0000000..c5a2018
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
@@ -0,0 +1,168 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderCpp
+ */
+
+// OSS-compatibility layer
+
+#import "RCTThirdPartyFabricComponentsProvider.h"
+
+#import <string>
+#import <unordered_map>
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name) {
+  static std::unordered_map<std::string, Class (*)(void)> sFabricComponentsClassMap = {
+    #if RCT_NEW_ARCH_ENABLED
+    #ifndef RCT_DYNAMIC_FRAMEWORKS
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_OSX
+
+    {"BlurView", BlurViewCls}, // 3
+
+    {"VibrancyView", VibrancyViewCls}, // 3
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV
+
+    {"MenuView", MenuViewCls}, // 4
+#endif
+
+
+#if !TARGET_OS_OSX && !TARGET_OS_VISION
+
+    {"AutoLayoutView", AutoLayoutViewCls}, // 6
+
+    {"CellContainer", CellContainerCls}, // 6
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+    {"SkiaDomView", SkiaDomViewCls}, // 7
+
+    {"SkiaPictureView", SkiaPictureViewCls}, // 7
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_VISION
+
+#endif
+
+
+    {"RNGestureHandlerButton", RNGestureHandlerButtonCls}, // 10
+
+    {"RNGestureHandlerRootView", RNGestureHandlerRootViewCls}, // 10
+#if !TARGET_OS_OSX && !TARGET_OS_TV && !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_VISION
+
+#endif
+
+#if !TARGET_OS_OSX && !TARGET_OS_VISION
+
+#endif
+
+
+#if !TARGET_OS_OSX
+
+    {"RNCSafeAreaProvider", RNCSafeAreaProviderCls}, // 15
+
+    {"RNCSafeAreaView", RNCSafeAreaViewCls}, // 15
+#endif
+
+#if !TARGET_OS_OSX
+
+    {"RNSFullWindowOverlay", RNSFullWindowOverlayCls}, // 16
+
+    {"RNSModalScreen", RNSModalScreenCls}, // 16
+
+    {"RNSScreenContainer", RNSScreenContainerCls}, // 16
+
+    {"RNSScreen", RNSScreenCls}, // 16
+
+    {"RNSScreenNavigationContainer", RNSScreenNavigationContainerCls}, // 16
+
+    {"RNSScreenStackHeaderConfig", RNSScreenStackHeaderConfigCls}, // 16
+
+    {"RNSScreenStackHeaderSubview", RNSScreenStackHeaderSubviewCls}, // 16
+
+    {"RNSScreenStack", RNSScreenStackCls}, // 16
+
+    {"RNSSearchBar", RNSSearchBarCls}, // 16
+#endif
+
+
+    {"RNSVGCircle", RNSVGCircleCls}, // 17
+
+    {"RNSVGClipPath", RNSVGClipPathCls}, // 17
+
+    {"RNSVGDefs", RNSVGDefsCls}, // 17
+
+    {"RNSVGEllipse", RNSVGEllipseCls}, // 17
+
+    {"RNSVGForeignObject", RNSVGForeignObjectCls}, // 17
+
+    {"RNSVGGroup", RNSVGGroupCls}, // 17
+
+    {"RNSVGImage", RNSVGImageCls}, // 17
+
+    {"RNSVGSvgView", RNSVGSvgViewCls}, // 17
+
+    {"RNSVGLinearGradient", RNSVGLinearGradientCls}, // 17
+
+    {"RNSVGLine", RNSVGLineCls}, // 17
+
+    {"RNSVGMarker", RNSVGMarkerCls}, // 17
+
+    {"RNSVGMask", RNSVGMaskCls}, // 17
+
+    {"RNSVGPath", RNSVGPathCls}, // 17
+
+    {"RNSVGPattern", RNSVGPatternCls}, // 17
+
+    {"RNSVGRadialGradient", RNSVGRadialGradientCls}, // 17
+
+    {"RNSVGRect", RNSVGRectCls}, // 17
+
+    {"RNSVGSymbol", RNSVGSymbolCls}, // 17
+
+    {"RNSVGText", RNSVGTextCls}, // 17
+
+    {"RNSVGTextPath", RNSVGTextPathCls}, // 17
+
+    {"RNSVGTSpan", RNSVGTSpanCls}, // 17
+
+    {"RNSVGUse", RNSVGUseCls}, // 17
+#if !TARGET_OS_TV && !TARGET_OS_VISION
+
+    {"RNCWebView", RNCWebViewCls}, // 18
+#endif
+
+    #endif
+    #endif
+  };
+
+  auto p = sFabricComponentsClassMap.find(name);
+  if (p != sFabricComponentsClassMap.end()) {
+    auto classFunc = p->second;
+    return classFunc();
+  }
+  return nil;
+}
diff --git a/node_modules/react-native/scripts/react-native-xcode.sh b/node_modules/react-native/scripts/react-native-xcode.sh
index 345603c..706d9b0 100755
--- a/node_modules/react-native/scripts/react-native-xcode.sh
+++ b/node_modules/react-native/scripts/react-native-xcode.sh
@@ -12,6 +12,12 @@
 set -x -e
 DEST=$CONFIGURATION_BUILD_DIR/$UNLOCALIZED_RESOURCES_FOLDER_PATH
 
+# Path to react-native folder inside node_modules
+REACT_NATIVE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
+
+export CONFIG_CMD="$(which node) $REACT_NATIVE_DIR/cli.js config"
+export CONFIG_APP="${CONFIG_CMD}"
+
 # Enables iOS devices to get the IP address of the machine running Metro
 if [[ ! "$SKIP_BUNDLING_METRO_IP" && "$CONFIGURATION" = *Debug* && ! "$PLATFORM_NAME" == *simulator ]]; then
   for num in 0 1 2 3 4 5 6 7 8; do
@@ -56,8 +62,7 @@ case "$CONFIGURATION" in
     ;;
 esac
 
-# Path to react-native folder inside node_modules
-REACT_NATIVE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
+
 # Most projects have their project root, one level up from their Xcode project dir (the "ios" directory)
 PROJECT_ROOT=${PROJECT_ROOT:-"$PROJECT_DIR/.."}
 
