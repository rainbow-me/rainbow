diff --git a/node_modules/react-native-mmkv/lib/commonjs/hooks.js b/node_modules/react-native-mmkv/lib/commonjs/hooks.js
index 562245a..bd4df2d 100644
--- a/node_modules/react-native-mmkv/lib/commonjs/hooks.js
+++ b/node_modules/react-native-mmkv/lib/commonjs/hooks.js
@@ -68,6 +68,9 @@ function createMMKVHook(getter) {
       });
       return () => listener.remove();
     }, [key, mmkv]);
+    (0, _react.useEffect)(() => {
+      setValue(getter(mmkv, key));
+    }, [key, mmkv]);
     return (0, _react.useMemo)(() => [value, set], [value, set]);
   };
 }
@@ -132,7 +135,16 @@ function useMMKVObject(key, instance) {
     return JSON.parse(string);
   }, [string]);
   const setValue = (0, _react.useCallback)(v => {
-    setString(JSON.stringify(v));
+    if (typeof v === 'function') {
+      setString(prev => {
+        if (prev === undefined) {
+          return JSON.stringify(v(undefined))
+        }
+        return JSON.stringify(v(JSON.parse(prev)))
+      });
+    } else {
+      setString(JSON.stringify(v));
+    }
   }, [setString]);
   return [value, setValue];
 }
diff --git a/node_modules/react-native-mmkv/lib/module/hooks.js b/node_modules/react-native-mmkv/lib/module/hooks.js
index d65192e..8aee856 100644
--- a/node_modules/react-native-mmkv/lib/module/hooks.js
+++ b/node_modules/react-native-mmkv/lib/module/hooks.js
@@ -31,8 +31,12 @@ function createMMKVHook(getter) {
   return (key, instance) => {
     const mmkv = instance !== null && instance !== void 0 ? instance : getDefaultInstance();
     const [value, setValue] = useState(() => getter(mmkv, key));
+
+    const valueNonReactive = useRef();
+    valueNonReactive.current = value;
+
     const set = useCallback(v => {
-      const newValue = typeof v === 'function' ? v(value) : v;
+      const newValue = typeof v === 'function' ? v(valueNonReactive.current) : v;
 
       switch (typeof newValue) {
         case 'number':
@@ -48,7 +52,7 @@ function createMMKVHook(getter) {
         default:
           throw new Error(`MMKV: Type ${typeof newValue} is not supported!`);
       }
-    }, [key, mmkv, value]);
+    }, [key, mmkv]);
     useEffect(() => {
       const listener = mmkv.addOnValueChangedListener(changedKey => {
         if (changedKey === key) {
@@ -57,6 +61,11 @@ function createMMKVHook(getter) {
       });
       return () => listener.remove();
     }, [key, mmkv]);
+
+    useEffect(() => {
+      setValue(getter(mmkv, key));
+    }, [key, mmkv]);
+
     return useMemo(() => [value, set], [value, set]);
   };
 }
@@ -117,7 +126,16 @@ export function useMMKVObject(key, instance) {
     return JSON.parse(string);
   }, [string]);
   const setValue = useCallback(v => {
-    setString(JSON.stringify(v));
+    if (typeof v === 'function') {
+      setString(prev => {
+        if (prev === undefined) {
+          return JSON.stringify(v(undefined))
+        }
+        return JSON.stringify(v(JSON.parse(prev)))
+      });
+    } else {
+      setString(JSON.stringify(v));
+    }
   }, [setString]);
   return [value, setValue];
 }
diff --git a/node_modules/react-native-mmkv/lib/typescript/hooks.d.ts b/node_modules/react-native-mmkv/lib/typescript/hooks.d.ts
index 3cdcda7..4ca0238 100644
--- a/node_modules/react-native-mmkv/lib/typescript/hooks.d.ts
+++ b/node_modules/react-native-mmkv/lib/typescript/hooks.d.ts
@@ -46,4 +46,4 @@ export declare const useMMKVBoolean: (key: string, instance?: MMKVInterface | un
  * const [user, setUser] = useMMKVObject<User>("user")
  * ```
  */
-export declare function useMMKVObject<T>(key: string, instance?: MMKVInterface): [value: T | undefined, setValue: (value: T) => void];
+export declare function useMMKVObject<T>(key: string, instance?: MMKVInterface): [value: T | undefined, setValue: (value: T | ((current: T) => T | undefined) | undefined) => void];
