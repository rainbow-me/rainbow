diff --git a/node_modules/react-native-reanimated/src/Animated.js b/node_modules/react-native-reanimated/src/Animated.js
index 523853a..d7813c3 100644
--- a/node_modules/react-native-reanimated/src/Animated.js
+++ b/node_modules/react-native-reanimated/src/Animated.js
@@ -81,7 +81,7 @@ export * from './derived';
 export * from './reanimated2';
 
 export {
-  EasingNode,
+  EasingNode as Easing,
   Transitioning,
   Transition,
   createTransitioningComponent,
diff --git a/node_modules/react-native-reanimated/src/derived/index.js b/node_modules/react-native-reanimated/src/derived/index.js
index e6e1541..943d1b6 100644
--- a/node_modules/react-native-reanimated/src/derived/index.js
+++ b/node_modules/react-native-reanimated/src/derived/index.js
@@ -2,7 +2,7 @@ export { default as acc } from './acc';
 export { default as color } from './color';
 export { default as diff } from './diff';
 export { default as diffClamp } from './diffClamp';
-export { default as interpolateNode, Extrapolate } from './interpolate';
+export { default as interpolateNode, default as interpolate, Extrapolate } from './interpolate';
 export { default as interpolateColors } from './interpolateColors';
 export { default as onChange } from './onChange';
 export { default as useCode } from './useCode';
diff --git a/node_modules/react-native-reanimated/src/reanimated2/Easing.js b/node_modules/react-native-reanimated/src/reanimated2/Easing.js
index 48a3c76..0723069 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/Easing.js
+++ b/node_modules/react-native-reanimated/src/reanimated2/Easing.js
@@ -235,7 +235,7 @@ function inOut(easing) {
   };
 }
 
-export const Easing = {
+export const NewEasing = {
   linear,
   ease,
   quad,
diff --git a/node_modules/react-native-reanimated/src/reanimated2/NativeReanimated.js b/node_modules/react-native-reanimated/src/reanimated2/NativeReanimated.js
index dce1ee8..b2e9de4 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/NativeReanimated.js
+++ b/node_modules/react-native-reanimated/src/reanimated2/NativeReanimated.js
@@ -26,12 +26,14 @@ const NativeReanimated = {
     return InnerNativeModule.makeRemote(object);
   },
 
-  startMapper(mapper, inputs = [], outputs = []) {
+  startMapper(mapper, inputs = [], outputs = [], name) {
+    //console.log(name)
     return InnerNativeModule.startMapper(mapper, inputs, outputs);
   },
 
-  stopMapper(mapperId) {
-    return InnerNativeModule.stopMapper(mapperId);
+  stopMapper(mapperId, name) {
+    console.log(name)
+    //return InnerNativeModule.stopMapper(mapperId);
   },
 
   registerEventHandler(eventHash, eventHandler) {
diff --git a/node_modules/react-native-reanimated/src/reanimated2/animations.js b/node_modules/react-native-reanimated/src/reanimated2/animations.js
index 6629e32..daca979 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/animations.js
+++ b/node_modules/react-native-reanimated/src/reanimated2/animations.js
@@ -1,5 +1,5 @@
 /* global _WORKLET */
-import { Easing } from './Easing';
+import { NewEasing as Easing } from './Easing';
 import NativeReanimated from './NativeReanimated';
 
 let IN_STYLE_UPDATER = false;
diff --git a/node_modules/react-native-reanimated/src/reanimated2/core.js b/node_modules/react-native-reanimated/src/reanimated2/core.js
index 31c89f6..8352dd7 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/core.js
+++ b/node_modules/react-native-reanimated/src/reanimated2/core.js
@@ -148,5 +148,5 @@ export function startMapper(mapper, inputs = [], outputs = []) {
 }
 
 export function stopMapper(mapperId) {
-  NativeReanimated.stopMapper(mapperId);
+  //NativeReanimated.stopMapper(mapperId);
 }
diff --git a/node_modules/react-native-reanimated/src/reanimated2/interpolation.js b/node_modules/react-native-reanimated/src/reanimated2/interpolation.js
index fc43c60..920eaa9 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/interpolation.js
+++ b/node_modules/react-native-reanimated/src/reanimated2/interpolation.js
@@ -28,7 +28,7 @@ function internalInterpolate(x, l, r, ll, rr, type) {
   return val;
 }
 
-export function interpolate(x, input, output, type) {
+export function newInterpolate(x, input, output, type) {
   'worklet';
   if (x && x.__nodeID) {
     throw new Error(
