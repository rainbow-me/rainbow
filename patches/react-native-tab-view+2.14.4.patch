diff --git a/node_modules/react-native-tab-view/lib/module/Pager.js b/node_modules/react-native-tab-view/lib/module/Pager.js
index d3e8a5b..31a9e13 100644
--- a/node_modules/react-native-tab-view/lib/module/Pager.js
+++ b/node_modules/react-native-tab-view/lib/module/Pager.js
@@ -64,8 +64,8 @@ const SPRING_CONFIG = {
 };
 const SPRING_VELOCITY_SCALE = 1;
 const TIMING_CONFIG = {
-  duration: 200,
-  easing: Easing.out(Easing.cubic)
+  duration: 275,
+  easing: Easing.bezier(0.22, 1, 0.36, 1)
 };
 export default class Pager extends React.Component {
   constructor(...args) {
diff --git a/node_modules/react-native-tab-view/package.json b/node_modules/react-native-tab-view/package.json
index a27a538..5f2e9b3 100644
--- a/node_modules/react-native-tab-view/package.json
+++ b/node_modules/react-native-tab-view/package.json
@@ -2,8 +2,34 @@
   "name": "react-native-tab-view",
   "version": "2.14.4",
   "description": "Tab view component for React Native",
-  "main": "lib/commonjs/index.js",
-  "react-native": "lib/module/index.js",
+  "main": "src/index.tsx",
+  "react-native": {
+    "lib/commonjs/index.js": "lib/module/index.js",
+    "zlib": "browserify-zlib",
+    "console": "console-browserify",
+    "constants": "constants-browserify",
+    "crypto": "react-native-crypto",
+    "dns": "dns.js",
+    "net": "react-native-tcp",
+    "domain": "domain-browser",
+    "http": "@tradle/react-native-http",
+    "https": "https-browserify",
+    "os": "react-native-os",
+    "path": "path-browserify",
+    "querystring": "querystring-es3",
+    "fs": "react-native-level-fs",
+    "_stream_transform": "readable-stream/transform",
+    "_stream_readable": "readable-stream/readable",
+    "_stream_writable": "readable-stream/writable",
+    "_stream_duplex": "readable-stream/duplex",
+    "_stream_passthrough": "readable-stream/passthrough",
+    "dgram": "react-native-udp",
+    "stream": "stream-browserify",
+    "timers": "timers-browserify",
+    "tty": "tty-browserify",
+    "vm": "vm-browserify",
+    "tls": false
+  },
   "module": "lib/module/index.js",
   "types": "lib/typescript/src/index.d.ts",
   "files": [
@@ -93,5 +119,32 @@
       "module",
       "typescript"
     ]
+  },
+  "browser": {
+    "lib/commonjs/index.js": "lib/module/index.js",
+    "zlib": "browserify-zlib",
+    "console": "console-browserify",
+    "constants": "constants-browserify",
+    "crypto": "react-native-crypto",
+    "dns": "dns.js",
+    "net": "react-native-tcp",
+    "domain": "domain-browser",
+    "http": "@tradle/react-native-http",
+    "https": "https-browserify",
+    "os": "react-native-os",
+    "path": "path-browserify",
+    "querystring": "querystring-es3",
+    "fs": "react-native-level-fs",
+    "_stream_transform": "readable-stream/transform",
+    "_stream_readable": "readable-stream/readable",
+    "_stream_writable": "readable-stream/writable",
+    "_stream_duplex": "readable-stream/duplex",
+    "_stream_passthrough": "readable-stream/passthrough",
+    "dgram": "react-native-udp",
+    "stream": "stream-browserify",
+    "timers": "timers-browserify",
+    "tty": "tty-browserify",
+    "vm": "vm-browserify",
+    "tls": false
   }
 }
diff --git a/node_modules/react-native-tab-view/src/ScrollPager.tsx b/node_modules/react-native-tab-view/src/ScrollPager.tsx
index 16eae4e..8998994 100644
--- a/node_modules/react-native-tab-view/src/ScrollPager.tsx
+++ b/node_modules/react-native-tab-view/src/ScrollPager.tsx
@@ -18,6 +18,8 @@ export default class ScrollPager<T extends Route> extends React.Component<
     bounces: true,
   };
 
+  private lastIndex: any;
+
   componentDidMount() {
     if (this.props.layout.width) {
       this.scrollTo(
@@ -39,6 +41,9 @@ export default class ScrollPager<T extends Route> extends React.Component<
     } else if (
       prevProps.navigationState.index !== this.props.navigationState.index
     ) {
+      if (this.interactionHandle === null) {
+        this.interactionHandle = InteractionManager.createInteractionHandle()
+      }
       this.scrollTo(offset);
     }
 
@@ -50,6 +55,7 @@ export default class ScrollPager<T extends Route> extends React.Component<
   componentWillUnmount() {
     if (this.interactionHandle !== null) {
       InteractionManager.clearInteractionHandle(this.interactionHandle);
+      this.interactionHandle = null;
     }
   }
 
@@ -134,6 +140,13 @@ export default class ScrollPager<T extends Route> extends React.Component<
 
   private relativePosition = divide(this.position, this.layoutWidthNode);
 
+  private handleMomentumScrollEnd = () => {
+    if (this.interactionHandle !== null) {
+      InteractionManager.clearInteractionHandle(this.interactionHandle)
+      this.interactionHandle = null;
+    }
+  }
+
   render() {
     const {
       children,
@@ -156,6 +169,7 @@ export default class ScrollPager<T extends Route> extends React.Component<
       onSwipeEnd?.();
       if (this.interactionHandle !== null) {
         InteractionManager.clearInteractionHandle(this.interactionHandle);
+        this.interactionHandle = null;
       }
     };
 
@@ -168,20 +182,19 @@ export default class ScrollPager<T extends Route> extends React.Component<
         <Animated.ScrollView
           pagingEnabled
           directionalLockEnabled
-          keyboardDismissMode="on-drag"
-          keyboardShouldPersistTaps="always"
           overScrollMode="never"
           scrollToOverflowEnabled
           scrollEnabled={this.props.swipeEnabled}
           automaticallyAdjustContentInsets={false}
           bounces={overscroll}
+          keyboardShouldPersistTaps="always"
           scrollsToTop={false}
           showsHorizontalScrollIndicator={false}
           scrollEventThrottle={1}
           onScroll={this.onScroll}
           onScrollBeginDrag={handleSwipeStart}
           onScrollEndDrag={handleSwipeEnd}
-          onMomentumScrollEnd={this.onScroll}
+          onMomentumScrollEnd={this.handleMomentumScrollEnd}
           contentOffset={this.initialOffset}
           style={styles.container}
           contentContainerStyle={
