diff --git a/node_modules/@shopify/react-native-skia/cpp/api/JsiSkHostObjects.h b/node_modules/@shopify/react-native-skia/cpp/api/JsiSkHostObjects.h
index ac0181e..9810137 100644
--- a/node_modules/@shopify/react-native-skia/cpp/api/JsiSkHostObjects.h
+++ b/node_modules/@shopify/react-native-skia/cpp/api/JsiSkHostObjects.h
@@ -49,8 +49,9 @@ public:
    * @param context Platform context
    */
   JsiSkWrappingHostObject(std::shared_ptr<RNSkPlatformContext> context,
-                          T object)
-      : JsiSkHostObject(std::move(context)), _object(std::move(object)) {}
+                          T object,
+                          bool throwOnDisposed)
+    : JsiSkHostObject(std::move(context)), _object(std::move(object)), _throwOnDisposed(throwOnDisposed) {}
 
   /**
    * Returns the underlying object exposed by this host object. This object
@@ -88,7 +89,11 @@ private:
    */
   T validateObject() const {
     if (_isDisposed) {
-      throw std::runtime_error("Attempted to access a disposed object.");
+      if (_throwOnDisposed) {
+        throw std::runtime_error("Attempted to access a disposed object.");
+      } else {
+        return nullptr;
+      }
     }
     return _object;
   }
@@ -109,6 +114,8 @@ private:
    * Resource disposed flag.
    */
   std::atomic<bool> _isDisposed = {false};
+    
+  bool _throwOnDisposed;
 };
 
 template <typename T>
@@ -116,9 +123,11 @@ class JsiSkWrappingSharedPtrHostObject
     : public JsiSkWrappingHostObject<std::shared_ptr<T>> {
 public:
   JsiSkWrappingSharedPtrHostObject(std::shared_ptr<RNSkPlatformContext> context,
-                                   std::shared_ptr<T> object)
+                                   std::shared_ptr<T> object,
+                                   bool throwOnDisposed = true)
       : JsiSkWrappingHostObject<std::shared_ptr<T>>(std::move(context),
-                                                    std::move(object)) {}
+                                                    std::move(object),
+                                                    throwOnDisposed) {}
         
   /**
     Returns the underlying object from a host object of this type
@@ -141,9 +150,11 @@ template <typename T>
 class JsiSkWrappingSkPtrHostObject : public JsiSkWrappingHostObject<sk_sp<T>> {
 public:
   JsiSkWrappingSkPtrHostObject(std::shared_ptr<RNSkPlatformContext> context,
-                               sk_sp<T> object)
+                               sk_sp<T> object,
+                               bool throwOnDisposed = true)
       : JsiSkWrappingHostObject<sk_sp<T>>(std::move(context),
-                                          std::move(object)) {}
+                                          std::move(object),
+                                          throwOnDisposed) {}
 
   /**
     Returns the underlying object from a host object of this type
diff --git a/node_modules/@shopify/react-native-skia/cpp/api/JsiSkPicture.h b/node_modules/@shopify/react-native-skia/cpp/api/JsiSkPicture.h
index d13f79d..24dbfc7 100644
--- a/node_modules/@shopify/react-native-skia/cpp/api/JsiSkPicture.h
+++ b/node_modules/@shopify/react-native-skia/cpp/api/JsiSkPicture.h
@@ -23,7 +23,7 @@ class JsiSkPicture : public JsiSkWrappingSkPtrHostObject<SkPicture> {
 public:
   JsiSkPicture(std::shared_ptr<RNSkPlatformContext> context,
                const sk_sp<SkPicture> picture)
-      : JsiSkWrappingSkPtrHostObject<SkPicture>(context, picture) {}
+      : JsiSkWrappingSkPtrHostObject<SkPicture>(context, picture, false) {}
 
   JSI_HOST_FUNCTION(makeShader) {
     auto tmx = (SkTileMode)arguments[0].asNumber();
