diff --git a/node_modules/react-native-gesture-handler/GestureComponents.js b/node_modules/react-native-gesture-handler/GestureComponents.js
index b7f2207..26c9fda 100644
--- a/node_modules/react-native-gesture-handler/GestureComponents.js
+++ b/node_modules/react-native-gesture-handler/GestureComponents.js
@@ -55,4 +55,17 @@ module.exports = {
     }
     return MEMOIZED.FlatList;
   },
+  get SectionList() {
+    if (!MEMOIZED.SectionList) {
+      const ScrollView = this.ScrollView;
+      MEMOIZED.SectionList = React.forwardRef((props, ref) => (
+        <ReactNative.SectionList
+          ref={ref}
+          {...props}
+          renderScrollComponent={scrollProps => <ScrollView {...scrollProps} />}
+        />
+      ));
+    }
+    return MEMOIZED.SectionList;
+  },
 };
diff --git a/node_modules/react-native-gesture-handler/android/lib/src/main/java/com/swmansion/gesturehandler/GestureHandlerOrchestrator.java b/node_modules/react-native-gesture-handler/android/lib/src/main/java/com/swmansion/gesturehandler/GestureHandlerOrchestrator.java
index f08713b..a97b902 100644
--- a/node_modules/react-native-gesture-handler/android/lib/src/main/java/com/swmansion/gesturehandler/GestureHandlerOrchestrator.java
+++ b/node_modules/react-native-gesture-handler/android/lib/src/main/java/com/swmansion/gesturehandler/GestureHandlerOrchestrator.java
@@ -13,6 +13,8 @@ import java.util.Comparator;
 
 import androidx.annotation.Nullable;
 
+import com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper;
+
 public class GestureHandlerOrchestrator {
 
   // The limit doesn't necessarily need to exists, it was just simpler to implement it that way
@@ -513,11 +515,13 @@ public class GestureHandlerOrchestrator {
   }
 
   private static boolean canRunSimultaneously(GestureHandler a, GestureHandler b) {
+    if (a instanceof RNGestureHandlerRootHelper.RootViewGestureHandler && b instanceof PanGestureHandler) {
+      return true;
+    }
     return a == b || a.shouldRecognizeSimultaneously(b) || b.shouldRecognizeSimultaneously(a);
   }
 
   private static boolean shouldHandlerBeCancelledBy(GestureHandler handler, GestureHandler other) {
-
     if (!handler.hasCommonPointers(other)) {
       // if two handlers share no common pointer one can never trigger cancel for the other
       return false;
@@ -533,6 +537,11 @@ public class GestureHandlerOrchestrator {
       // state, we delegate the decision to the implementation of GestureHandler#shouldBeCancelledBy
       return handler.shouldBeCancelledBy(other);
     }
+
+    if (other instanceof RNGestureHandlerRootHelper.RootViewGestureHandler && handler instanceof PanGestureHandler) {
+      return false;
+    }
+ 
     return true;
   }
 
diff --git a/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerRootHelper.java b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerRootHelper.java
index 9bf0c8f..8d4e58c 100644
--- a/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerRootHelper.java
+++ b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerRootHelper.java
@@ -81,7 +81,7 @@ public class RNGestureHandlerRootHelper {
     return mRootView;
   }
 
-  private class RootViewGestureHandler extends GestureHandler {
+  public class RootViewGestureHandler extends GestureHandler {
     @Override
     protected void onHandle(MotionEvent event) {
       int currentState = getState();
diff --git a/node_modules/react-native-gesture-handler/ios/Handlers/RNNativeViewHandler.m b/node_modules/react-native-gesture-handler/ios/Handlers/RNNativeViewHandler.m
index 73022d7..49b8507 100644
--- a/node_modules/react-native-gesture-handler/ios/Handlers/RNNativeViewHandler.m
+++ b/node_modules/react-native-gesture-handler/ios/Handlers/RNNativeViewHandler.m
@@ -78,7 +78,7 @@ - (void)bindToView:(UIView *)view
         // we expect for RCTScrollView component to contain a subclass of UIScrollview as the only
         // subview
         UIScrollView *scrollView = [view.subviews objectAtIndex:0];
-        scrollView.delaysContentTouches = YES;
+        scrollView.delaysContentTouches = NO;
     }
 }
 
