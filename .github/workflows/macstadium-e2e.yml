# This is a basic workflow to help you get started with Actions

name: iOS e2e (MacStadium)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  pull_request:
    branches: ["macstadium"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up github keys
        run: git config core.sshCommand "ssh -i ~/.ssh/id_ed25519 -F /dev/null"

      - name: Set up ENV vars & scripts
        run: |
          # read local env vars
          source ~/.bashrc
          # fetch env vars
          git clone git@github.com:rainbow-me/rainbow-env.git
          # unpack dotenv
          mv rainbow-env/dotenv .env && rm -rf rainbow-env 
          # run CI scripts
          eval $CI_SCRIPTS
          # tweak dotenv for e2e 
          sed -i''-e "s/\IS_TESTING=false/IS_TESTING=true/" .env && rm -f .env-e

      - name: Install deps via Yarn
        run: yarn setup-ci

      - name: Check for frozen lockfile
        run: yarn check-lockfile
        
      - name: Audit CI
        run:  yarn audit-ci --moderate --config audit-ci.json

      - name: Lint
        run: yarn lint
        
      - name: Install Pods
        run: cd ios && pod install && cd ..

      - name: Run iOS e2e tests (Release mode)
        run: ./node_modules/.bin/detox build --configuration ios.sim.release &&  ./node_modules/.bin/detox test -R 5 --configuration ios.sim.release --forceExit

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload-file-path: "./payload-slack-content.json"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

