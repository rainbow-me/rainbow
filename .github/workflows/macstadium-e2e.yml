name: iOS e2e tests

on: [pull_request, workflow_dispatch]

jobs:
  # Job to install dependencies
  install-deps:
    runs-on: ["self-hosted"]
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up github keys
        run: git config core.sshCommand "ssh -i ~/.ssh/id_ed25519 -F /dev/null"

      - name: Clean iOS app
        run: yarn clean:ios > /dev/null 2>&1 || true

      - name: Set up ENV vars & scripts
        env:
          CI_SCRIPTS: ${{ secrets.CI_SCRIPTS }}
        run: |
          source ~/.zshrc
          git clone git@github.com:rainbow-me/rainbow-env.git
          mv rainbow-env/dotenv .env && rm -rf rainbow-env
          eval $CI_SCRIPTS

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn cache clean --all && yarn install && yarn setup

  # Job for linting and unit tests
  linting-and-unit-tests:
    runs-on: ["self-hosted"]
    needs: install-deps
    steps:
      - name: Check for frozen lockfile
        run: ./scripts/check-lockfile.sh

      - name: Audit CI
        run: yarn audit-ci --config audit-ci.jsonc

      - name: Lint
        run: yarn lint:ci

      - name: Unit tests
        run: yarn test

  # Job to set up iOS dependencies
  ios-deps:
    runs-on: ["self-hosted"]
    needs: install-deps
    steps:
      - name: Rebuild detox cache
        run: ./node_modules/.bin/detox clean-framework-cache && ./node_modules/.bin/detox build-framework-cache

      - name: Version debug
        run: |
          npx react-native info

      - name: Install pods
        run: yarn install-bundle && yarn install-pods

      - name: Fix permissions
        run: |
          chmod -R +x node_modules/react-native/scripts
          chmod -R +x node_modules/@sentry/react-native/scripts

  # Job to build iOS TopHat and upload to S3
  ios-tophat-build:
    runs-on: ["self-hosted"]
    needs: ios-deps
    steps:
      - name: Build the app in release mode
        run: xcodebuild -workspace ios/Rainbow.xcworkspace -scheme Rainbow -configuration Release -sdk iphonesimulator -derivedDataPath ios/build

      - name: Upload to AWS S3
        env:
          AWS_BUCKET: rainbow-app-team-production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          APP_DIR=$(find . -name "*.app" | head -n 1)
          cd $APP_DIR && zip -r ../App.zip . && cd ..
          aws s3 cp "App.zip "s3://${AWS_BUCKET}/${BRANCH_NAME}/${COMMIT_HASH}.zip"
      - name: Post comment to PR
        if: github.event_name == 'pull_request'
        env:
          TOPHAT_GITHUB_TOKEN: ${{ secrets.TOPHAT_GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          COMMENT="Here's the app file: http://localhost:29070/install/ios?virtual=https://app-team.p.rainbow.me/${BRANCH_NAME}/${COMMIT_HASH}.app"
          curl -s -H "Authorization: token $TOPHAT_GITHUB_TOKEN" -X POST \
          -d "{\"body\":\"$COMMENT\"}" \
          "${{ github.event.pull_request.comments_url }}"

           # Job for running iOS e2e tests
  ios-e2e-tests:
    runs-on: ["self-hosted"]
    needs: ios-tophat-build
    steps:
      - name: Run iOS e2e tests with retry
        run: |
          sed -i'' -e "s/IS_TESTING=false/IS_TESTING=true/" .env && rm -f .env-e 
          ./scripts/run-retry-tests.sh 3