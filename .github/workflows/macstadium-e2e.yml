name: iOS e2e tests

on: [pull_request, workflow_dispatch]
jobs:
  # This workflow contains a single job called "ios-e2e"
  ios-e2e:
    # The type of runner that the job will run on
    runs-on: ["self-hosted"]
    # Cancel current builds if there's a newer commit on the same branch
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up github keys
        run:  git config core.sshCommand "ssh -i ~/.ssh/id_ed25519 -F /dev/null"

      - name: Set up ENV vars & scripts
        run: |
          # read local env vars
          source ~/.bashrc
          # fetch env vars
          git clone git@github.com:rainbow-me/rainbow-env.git
          # unpack dotenv
          mv rainbow-env/dotenv .env && rm -rf rainbow-env 
          # run CI scripts
          eval $CI_SCRIPTS
          # tweak dotenv for e2e 
          sed -i''-e "s/\IS_TESTING=false/IS_TESTING=true/" .env && rm -f .env-e
      - name: Install deps via Yarn
        run: yarn setup-ci

      - name: Check for frozen lockfile
        run: yarn check-lockfile

      - name: Audit CI
        run:  yarn audit-ci --config audit-ci.jsonc

      - name: Lint
        run: yarn lint:ci

      - name: Install Pods
        run: cd ios && bundle install && pod install --repo-update && cd ..

      - name: Rebuild detox cache
        run: ./node_modules/.bin/detox clean-framework-cache && ./node_modules/.bin/detox build-framework-cache

      - name: Remove old Detox artifacts
        run: rm -rf ./artifacts/

      - name: Build the app in release mode
        run: ./node_modules/.bin/detox build --configuration ios.sim.release

      - name: Run iOS e2e tests
        run: ./node_modules/.bin/detox test -R 5 --configuration ios.sim.release --forceExit --bail
     
      - name: Upload Test Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts
          path: artifacts/**

