name: iOS e2e tests

on: [pull_request, workflow_dispatch]
jobs:
  ios-e2e:
    runs-on: ["self-hosted", "CI-8"]
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up github keys
        run: git config core.sshCommand "ssh -i ~/.ssh/id_ed25519 -F /dev/null"

      - name: Clean iOS app
        run: yarn clean:ios > /dev/null 2>&1 || true

      - name: Set up ENV vars & scripts
        env:
          CI_SCRIPTS: ${{ secrets.CI_SCRIPTS }}
        run: |
          source ~/.zshrc
          git clone git@github.com:rainbow-me/rainbow-env.git
          mv rainbow-env/dotenv .env && rm -rf rainbow-env
          eval $CI_SCRIPTS
          sed -i'' -e "s/IS_TESTING=false/IS_TESTING=true/" .env && rm -f .env-e 
      
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn cache clean --all && yarn install && yarn setup

      - name: Check for frozen lockfile
        run: ./scripts/check-lockfile.sh

      - name: Audit CI
        run: yarn audit-ci --config audit-ci.jsonc

      - name: Lint
        run: yarn lint:ci

      - name: Unit tests
        run: yarn test

      - name: Rebuild detox cache
        run: ./node_modules/.bin/detox clean-framework-cache && ./node_modules/.bin/detox build-framework-cache
      
      - name: Version debug
        run: |
          npx react-native info
      
      - name: Install pods
        run: yarn install-bundle && yarn install-pods

      - name: Fix permissions
        run: |
          chmod -R +x node_modules/react-native/scripts
          chmod -R +x node_modules/@sentry/react-native/scripts

      - name: Build the app in release mode
        run: yarn detox build --configuration ios.sim.release
      
      # Upload .app file to AWS S3
      - name: Upload to AWS S3
        env:
          AWS_BUCKET: rainbow-app-team-production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          APP_PATH=$(find . -name "*.app" | head -n 1)
          aws s3 cp "$APP_PATH" "s3://${AWS_BUCKET}/${BRANCH_NAME}/${COMMIT_HASH}.app"


      # Add comment to the pull request with the link to the .app file
      - name: Post comment to PR
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          COMMENT="Here's the app file: http://localhost:29070/install/ios?virtual=https://app-team.p.rainbow.me/${BRANCH_NAME}/${COMMIT_HASH}.app"
          curl -s -H "Authorization: token $GITHUB_TOKEN" -X POST \
          -d "{\"body\":\"$COMMENT\"}" \
          "${{ github.event.pull_request.comments_url }}"

      # change the '3' here to how many times you want the tests to rerun on failure
      - name: Run iOS e2e tests with retry
        run: ./scripts/run-retry-tests.sh 3
